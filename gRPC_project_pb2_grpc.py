# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import gRPC_project_pb2 as gRPC__project__pb2


class setKeyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.set_key = channel.unary_unary(
                '/gRPC_project.setKeyService/set_key',
                request_serializer=gRPC__project__pb2.Key.SerializeToString,
                response_deserializer=gRPC__project__pb2.Key.FromString,
                )


class setKeyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def set_key(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_setKeyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'set_key': grpc.unary_unary_rpc_method_handler(
                    servicer.set_key,
                    request_deserializer=gRPC__project__pb2.Key.FromString,
                    response_serializer=gRPC__project__pb2.Key.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gRPC_project.setKeyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class setKeyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def set_key(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gRPC_project.setKeyService/set_key',
            gRPC__project__pb2.Key.SerializeToString,
            gRPC__project__pb2.Key.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class getKeyServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_key = channel.unary_unary(
                '/gRPC_project.getKeyService/get_key',
                request_serializer=gRPC__project__pb2.Key.SerializeToString,
                response_deserializer=gRPC__project__pb2.Key.FromString,
                )


class getKeyServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def get_key(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_getKeyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_key': grpc.unary_unary_rpc_method_handler(
                    servicer.get_key,
                    request_deserializer=gRPC__project__pb2.Key.FromString,
                    response_serializer=gRPC__project__pb2.Key.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'gRPC_project.getKeyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class getKeyService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def get_key(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/gRPC_project.getKeyService/get_key',
            gRPC__project__pb2.Key.SerializeToString,
            gRPC__project__pb2.Key.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
